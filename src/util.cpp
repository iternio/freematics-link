#include <FreematicsPlus.h>
#ifdef BOARD_HAS_PSRAM
#include <esp_himem.h>
#endif
#include "util.h"

void blink(uint32_t ms, byte n)
{
    static bool setup = false;
    if (!setup)
    {
        pinMode(PIN_LED, OUTPUT);
        setup = true;
    }
    for (byte i = 0; i < n; i++) {
        digitalWrite(PIN_LED, HIGH);
        delay(ms);
        digitalWrite(PIN_LED, LOW);
        if (i < n-1)
            delay(ms);
    }
}

void beep(uint32_t freq, uint32_t ms, byte n)
{
}

void printSysInfo(const FreematicsESP32 &sys)
{
    Serial.print("CPU: ");
    Serial.print(ESP.getCpuFreqMHz());
    Serial.print("MHz Flash: ");
    Serial.print(getFlashSize() >> 10);
    Serial.println("MB");
#ifdef BOARD_HAS_PSRAM
    Serial.print("IRAM: ");
    Serial.print(ESP.getHeapSize() >> 10);
    Serial.print("KB");
    if (psramInit())
    {
        Serial.print(" PSRAM: ");
        Serial.print((ESP.getPsramSize() + esp_himem_get_phys_size()) >> 10);
        Serial.println("KB");
    }
#endif

    int rtc = rtc_clk_slow_freq_get();
    if (rtc)
    {
        Serial.print("RTC:");
        Serial.println(rtc);
    }
    // generate unique device ID
    // genDeviceID(devid);
    // Serial.print("DEVICE ID:");
    // Serial.println(devid);
    // TODO: Not sure we need the device ID like Freematics uses
    // We'd probably just use the tokens generated by the user on ABRP

    Serial.print("Firmware: R");
    Serial.println(sys.version);
}
